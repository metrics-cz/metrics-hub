rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    /* ---------- USERS ---------- */
    match /users/{uid} {
      allow read:  if request.auth != null && request.auth.uid == uid;
      allow write: if false; // jen backend
    }

    /* ---------- COMPANIES ---------- */
    match /companies/{cid} {
      allow read: if hasCompanyAccess(cid);
      allow write: if isOwner(cid);

      match /roles/{uid} {
        allow read:  if hasCompanyAccess(cid);
        allow write: if isOwner(cid);
      }

      match /integrations/{id} {
        allow read:  if hasRole(cid, ['owner','admin','reader']);
        allow write: if hasRole(cid, ['owner','admin']);
      }

      match /automations/{id} {
        allow read:  if hasRole(cid, ['owner','admin','reader']);
        allow write: if hasRole(cid, ['owner','admin']);
      }

      match /subscriptions/{id} {
        allow read, write: if isOwner(cid);
      }
    }

    /* ---------- FUNCTIONS ---------- */
    function hasCompanyAccess(cid) {
      return exists(/databases/$(db)/documents/companies/$(cid)/roles/$(request.auth.uid));
    }
    function getRole(cid) {
      return get(/databases/$(db)/documents/companies/$(cid)/roles/$(request.auth.uid)).data.role;
    }
    function hasRole(cid, arr) {
      return hasCompanyAccess(cid) && (getRole(cid) in arr);
    }
    function isOwner(cid) {
      return hasRole(cid, ['owner']);
    }
  }
}
