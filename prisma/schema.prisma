generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id              String           @id @db.Uuid
  user_id         String           @db.Uuid
  created_at      DateTime?        @db.Timestamptz(6)
  updated_at      DateTime?        @db.Timestamptz(6)
  factor_id       String?          @db.Uuid
  aal             aal_level?
  not_after       DateTime?        @db.Timestamptz(6)
  refreshed_at    DateTime?        @db.Timestamp(6)
  user_agent      String?
  ip              String?          @db.Inet
  tag             String?
  oauth_client_id String?          @db.Uuid
  mfa_amr_claims  mfa_amr_claims[]
  refresh_tokens  refresh_tokens[]
  oauth_clients   oauth_clients?   @relation(fields: [oauth_client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@index([oauth_client_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                                   String?                @db.Uuid
  id                                                            String                 @id @db.Uuid
  aud                                                           String?                @db.VarChar(255)
  role                                                          String?                @db.VarChar(255)
  email                                                         String?                @db.VarChar(255)
  encrypted_password                                            String?                @db.VarChar(255)
  email_confirmed_at                                            DateTime?              @db.Timestamptz(6)
  invited_at                                                    DateTime?              @db.Timestamptz(6)
  confirmation_token                                            String?                @db.VarChar(255)
  confirmation_sent_at                                          DateTime?              @db.Timestamptz(6)
  recovery_token                                                String?                @db.VarChar(255)
  recovery_sent_at                                              DateTime?              @db.Timestamptz(6)
  email_change_token_new                                        String?                @db.VarChar(255)
  email_change                                                  String?                @db.VarChar(255)
  email_change_sent_at                                          DateTime?              @db.Timestamptz(6)
  last_sign_in_at                                               DateTime?              @db.Timestamptz(6)
  raw_app_meta_data                                             Json?
  raw_user_meta_data                                            Json?
  is_super_admin                                                Boolean?
  created_at                                                    DateTime?              @db.Timestamptz(6)
  updated_at                                                    DateTime?              @db.Timestamptz(6)
  phone                                                         String?                @unique
  phone_confirmed_at                                            DateTime?              @db.Timestamptz(6)
  phone_change                                                  String?                @default("")
  phone_change_token                                            String?                @default("") @db.VarChar(255)
  phone_change_sent_at                                          DateTime?              @db.Timestamptz(6)
  confirmed_at                                                  DateTime?              @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                                    String?                @default("") @db.VarChar(255)
  email_change_confirm_status                                   Int?                   @default(0) @db.SmallInt
  banned_until                                                  DateTime?              @db.Timestamptz(6)
  reauthentication_token                                        String?                @default("") @db.VarChar(255)
  reauthentication_sent_at                                      DateTime?              @db.Timestamptz(6)
  is_sso_user                                                   Boolean                @default(false)
  deleted_at                                                    DateTime?              @db.Timestamptz(6)
  is_anonymous                                                  Boolean                @default(false)
  identities                                                    identities[]
  mfa_factors                                                   mfa_factors[]
  oauth_authorizations                                          oauth_authorizations[]
  oauth_consents                                                oauth_consents[]
  one_time_tokens                                               one_time_tokens[]
  sessions                                                      sessions[]
  app_schemas                                                   app_schemas[]
  audit_logs                                                    audit_logs[]
  companies                                                     companies[]
  company_applications_company_applications_connected_byTousers company_applications[] @relation("company_applications_connected_byTousers")
  company_applications_company_applications_created_byTousers   company_applications[] @relation("company_applications_created_byTousers")
  company_applications                                          company_applications[]
  company_connections                                           company_connections[]
  company_invitations_sent                                      company_invitations[]  @relation("Inviter")
  company_invitations_received                                  company_invitations[]
  execution_runs                                                execution_runs[]
  notifications                                                 notifications[]
  plugin_data_plugin_data_created_byTousers                     plugin_data[]          @relation("plugin_data_created_byTousers")
  plugin_data_plugin_data_updated_byTousers                     plugin_data[]          @relation("plugin_data_updated_byTousers")
  secrets                                                       secrets[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model companies {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                 String
  billing_email        String?                @unique
  plan                 String?                @default("free")
  owner_uid            String?                @db.Uuid
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  active               Boolean?               @default(true)
  logo_url             String?
  square_logo_url      String?
  rectangular_logo_url String?
  primary_color        String?                @default("#3B82F6") @db.VarChar(7)
  secondary_color      String?                @default("#1F2937") @db.VarChar(7)
  contact_details      Json?                  @default("{}")
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  users                users?                 @relation(fields: [owner_uid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company_applications company_applications[]
  company_connections  company_connections[]
  company_invitations  company_invitations[]
  company_users        company_users[]
  execution_runs       execution_runs[]
  integration_logs     integration_logs[]
  secrets              secrets[]

  @@index([contact_details], map: "idx_companies_contact_details", type: Gin)
  @@index([updated_at], map: "idx_companies_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations.   https://pris.ly/d/row-level-security for more info.
model company_users {
  id         String    @id @default(dbgenerated("uuid_generate_v4()"))
  company_id String    @db.Uuid
  user_id    String    @db.Uuid
  role       String
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "company_users_company_fk")

  @@unique([company_id, user_id], map: "company_id_user_id_unique")
  @@unique([company_id, user_id])
  @@index([company_id], map: "idx_company_users_company_id")
  @@index([company_id, user_id, role], map: "idx_company_users_lookup")
  @@index([role, company_id], map: "idx_company_users_role_company_id")
  @@index([user_id], map: "idx_company_users_user_id")
  @@schema("public")
}

model company_invitations {
  id             String                    @id @default(uuid()) @db.Uuid
  email          String
  userId         String                    @db.Uuid
  companyId      String                    @db.Uuid
  invitedBy      String                    @db.Uuid
  role           company_invitation_role   @default(member)
  message        String?
  status         company_invitation_status @default(pending)
  expiresAt      DateTime                  @db.Timestamptz(6)
  acceptedAt     DateTime?                 @db.Timestamptz(6)
  createdAt      DateTime                  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime                  @default(now()) @db.Timestamptz(6)
  notificationId String?                   @db.Uuid
  company        companies                 @relation(fields: [companyId], references: [id])
  inviter        users                     @relation("Inviter", fields: [invitedBy], references: [id])
  notification   notifications?            @relation(fields: [notificationId], references: [id])
  user           users                     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([companyId])
  @@index([invitedBy])
  @@index([status])
  @@index([email])
  @@index([notificationId])
  @@index([companyId, status], map: "idx_company_invitations_company_id_status")
  @@index([email, status], map: "idx_company_invitations_email_status")
  @@index([expiresAt], map: "idx_company_invitations_expires_at")
  @@schema("public")
}

model notifications {
  id                  String                @id @default(uuid()) @db.Uuid
  userId              String                @db.Uuid
  type                notification_type
  title               String
  message             String
  data                Json?
  read                Boolean               @default(false)
  actionUrl           String?
  createdAt           DateTime              @default(now()) @db.Timestamptz(6)
  expiresAt           DateTime?             @db.Timestamptz(6)
  company_invitations company_invitations[]
  user                users                 @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([read])
  @@index([type])
  @@index([createdAt])
  @@index([createdAt(sort: Desc)], map: "idx_notifications_created_at")
  @@index([type], map: "idx_notifications_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model application_categories {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String         @unique
  description  String?
  icon         String?
  sort_order   Int?           @default(0)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  applications applications[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model applications {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String                    @unique(map: "applications_name_unique")
  description             String
  long_description        String?
  category_id             String                    @db.Uuid
  developer               String
  version                 String                    @default("1.0.0")
  icon_url                String?
  screenshots             String[]                  @default([])
  documentation_url       String?
  pricing_model           String?                   @default("free")
  price                   String?
  features                Json?                     @default("[]")
  tags                    String[]                  @default([])
  is_premium              Boolean?                  @default(false)
  is_active               Boolean?                  @default(true)
  metadata                Json?                     @default("{}")
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  type                    String                    @default("application")
  execution_type          String?                   @default("iframe")
  storage_path            String?
  manifest_data           Json?                     @default("{}")
  required_secrets        String[]                  @default([])
  timeout_seconds         Int?                      @default(300)
  memory_limit            String?                   @default("256MB")
  last_run_at             DateTime?                 @db.Timestamptz(6)
  last_run_status         String?
  integration_provider    String?
  auth_type               String?                   @default("oauth2")
  auth_config             Json?                     @default("{}")
  supported_features      Json?                     @default("[]")
  trigger_type            String?                   @default("schedule")
  supported_frequencies   Json?                     @default("[\"1h\", \"6h\", \"24h\"]")
  pricing_config          Json?                     @default("{}")
  default_config          Json?                     @default("{}")
  application_permissions application_permissions[]
  category_ref            application_categories    @relation(fields: [category_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  company_applications    company_applications[]
  execution_runs          execution_runs[]

  @@index([category_id])
  @@index([is_active])
  @@index([is_premium])
  @@index([tags], type: Gin)
  @@index([auth_type], map: "idx_applications_auth_type")
  @@index([category_id], map: "idx_applications_category_id")
  @@index([execution_type], map: "idx_applications_execution_type")
  @@index([last_run_at], map: "idx_applications_last_run_at")
  @@index([manifest_data], map: "idx_applications_manifest_data", type: Gin)
  @@index([storage_path], map: "idx_applications_storage_path")
  @@index([trigger_type], map: "idx_applications_trigger_type")
  @@index([type], map: "idx_applications_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_applications {
  id                                             String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_id                                     String               @db.Uuid
  application_id                                 String               @db.Uuid
  installed_at                                   DateTime?            @default(now()) @db.Timestamptz(6)
  installed_by                                   String?              @db.Uuid
  settings                                       Json?                @default("{}")
  created_at                                     DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime?            @default(now()) @db.Timestamptz(6)
  last_execution_at                              DateTime?            @db.Timestamptz(6)
  execution_count                                Int?                 @default(0)
  is_enabled                                     Boolean?             @default(false)
  connected_at                                   DateTime?            @default(now()) @db.Timestamptz(6)
  connected_by                                   String?              @db.Uuid
  last_sync_at                                   DateTime?            @db.Timestamptz(6)
  sync_status                                    String?              @default("pending")
  config                                         Json?                @default("{}")
  notification_channels                          Json?                @default("{}")
  timezone                                       String?              @default("UTC")
  next_run_at                                    DateTime?            @db.Timestamptz(6)
  last_run_at                                    DateTime?            @db.Timestamptz(6)
  run_count                                      Int?                 @default(0)
  success_count                                  Int?                 @default(0)
  error_count                                    Int?                 @default(0)
  last_error_message                             String?
  price_per_month                                Decimal?             @default(0) @db.Decimal(10, 2)
  created_by                                     String?              @db.Uuid
  is_active                                      Boolean              @default(true)
  frequency_seconds                              Int?                 @default(86400)
  plugin_config_data                             Bytes?               @map("plugin_data")
  application                                    applications         @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  company                                        companies            @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_company_applications_connected_byTousers users?               @relation("company_applications_connected_byTousers", fields: [connected_by], references: [id], onUpdate: NoAction)
  users_company_applications_created_byTousers   users?               @relation("company_applications_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  users                                          users?               @relation(fields: [installed_by], references: [id], onUpdate: NoAction)
  integration_health                             integration_health[]
  integration_logs                               integration_logs[]
  plugin_data                                    plugin_data[]

  @@unique([company_id, application_id])
  @@index([company_id])
  @@index([application_id])
  @@index([installed_at])
  @@index([application_id], map: "idx_company_applications_app_id")
  @@index([installed_at(sort: Desc)], map: "idx_company_applications_installed_at")
  @@index([application_id], map: "idx_company_applications_application_id")
  @@index([company_id], map: "idx_company_applications_company_id")
  @@index([is_active], map: "idx_company_applications_is_active")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model application_permissions {
  id              String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  application_id  String       @db.Uuid
  permission_name String
  description     String?
  is_required     Boolean?     @default(false)
  created_at      DateTime?    @default(now()) @db.Timestamptz(6)
  application     applications @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([application_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  table_name String
  operation  String
  old_data   Json?
  new_data   Json?
  user_id    String?   @db.Uuid
  timestamp  DateTime? @default(now()) @db.Timestamptz(6)
  ip_address String?   @db.Inet
  user_agent String?
  metadata   Json?
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation], map: "idx_audit_logs_operation")
  @@index([table_name], map: "idx_audit_logs_table_name")
  @@index([timestamp], map: "idx_audit_logs_timestamp")
  @@index([user_id], map: "idx_audit_logs_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model execution_runs {
  id               String             @id(map: "app_runs_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id           String             @db.Uuid
  company_id       String             @db.Uuid
  build_id         String?            @db.Uuid
  run_type         String
  status           String             @default("pending")
  executor_id      String?
  started_at       DateTime?          @default(now()) @db.Timestamptz(6)
  completed_at     DateTime?          @db.Timestamptz(6)
  duration_ms      Int?
  logs_path        String?
  output_path      String?
  error_message    String?
  metadata         Json?              @default("{}")
  execution_type   String?            @default("server")
  triggered_by     String?            @default("manual")
  user_id          String?            @db.Uuid
  output_data      Json?              @default("{}")
  output_files     String[]
  success          Boolean?           @default(false)
  error_details    String?
  bullmq_job_id    String?
  logs_summary     Json?              @default("{}")
  applications     applications       @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "app_runs_app_id_fkey")
  companies        companies          @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "app_runs_company_id_fkey")
  users            users?             @relation(fields: [user_id], references: [id], onUpdate: NoAction)
  integration_logs integration_logs[]

  @@index([app_id], map: "idx_app_runs_app_id")
  @@index([company_id], map: "idx_app_runs_company_id")
  @@index([run_type], map: "idx_app_runs_run_type")
  @@index([started_at(sort: Desc)], map: "idx_app_runs_started_at")
  @@index([status], map: "idx_app_runs_status")
  @@index([execution_type], map: "idx_execution_runs_execution_type")
  @@index([output_files], map: "idx_execution_runs_output_files", type: Gin)
  @@index([success], map: "idx_execution_runs_success")
  @@index([triggered_by], map: "idx_execution_runs_triggered_by")
  @@index([user_id], map: "idx_execution_runs_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model integration_health {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_application_id String               @db.Uuid
  checked_at             DateTime?            @default(now()) @db.Timestamptz(6)
  status                 String
  response_time_ms       Int?
  api_status             String?
  api_response_code      Int?
  api_error_message      String?
  credentials_valid      Boolean?
  credentials_expire_at  DateTime?            @db.Timestamptz(6)
  daily_api_calls        Int?                 @default(0)
  daily_quota_limit      Int?
  monthly_usage_mb       Decimal?             @default(0) @db.Decimal(10, 2)
  created_at             DateTime?            @default(now()) @db.Timestamptz(6)
  company_applications   company_applications @relation(fields: [company_application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_application_id], map: "idx_integration_health_company_app")
  @@index([checked_at(sort: Desc)], map: "idx_integration_health_recent")
  @@index([status, checked_at], map: "idx_integration_health_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model secrets {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id      String    @db.Uuid
  key             String
  description     String?
  created_by      String?   @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  last_used_at    DateTime? @db.Timestamptz(6)
  encrypted_value String
  key_version     Int?      @default(1)
  app_permissions String[]  @default([])
  companies       companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users?    @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@unique([company_id, key], map: "unique_company_key")
  @@index([company_id], map: "idx_secrets_company_id")
  @@index([key], map: "idx_secrets_key")
  @@index([last_used_at], map: "idx_secrets_last_used")
  @@index([app_permissions], map: "idx_secrets_app_permissions", type: Gin)
  @@index([key_version], map: "idx_secrets_key_version")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_authorizations {
  id                    String                     @id @db.Uuid
  authorization_id      String                     @unique
  client_id             String                     @db.Uuid
  user_id               String?                    @db.Uuid
  redirect_uri          String
  scope                 String
  state                 String?
  resource              String?
  code_challenge        String?
  code_challenge_method code_challenge_method?
  response_type         oauth_response_type        @default(code)
  status                oauth_authorization_status @default(pending)
  authorization_code    String?                    @unique
  created_at            DateTime                   @default(now()) @db.Timestamptz(6)
  expires_at            DateTime                   @default(dbgenerated("(now() + '00:03:00'::interval)")) @db.Timestamptz(6)
  approved_at           DateTime?                  @db.Timestamptz(6)
  oauth_clients         oauth_clients              @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                 users?                     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_clients {
  id                   String                  @id @db.Uuid
  client_secret_hash   String?
  registration_type    oauth_registration_type
  redirect_uris        String
  grant_types          String
  client_name          String?
  client_uri           String?
  logo_uri             String?
  created_at           DateTime                @default(now()) @db.Timestamptz(6)
  updated_at           DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?               @db.Timestamptz(6)
  client_type          oauth_client_type       @default(confidential)
  oauth_authorizations oauth_authorizations[]
  oauth_consents       oauth_consents[]
  sessions             sessions[]

  @@index([deleted_at])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_consents {
  id            String        @id @db.Uuid
  user_id       String        @db.Uuid
  client_id     String        @db.Uuid
  scopes        String
  granted_at    DateTime      @default(now()) @db.Timestamptz(6)
  revoked_at    DateTime?     @db.Timestamptz(6)
  oauth_clients oauth_clients @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, client_id], map: "oauth_consents_user_client_unique")
  @@index([user_id, granted_at(sort: Desc)], map: "oauth_consents_user_order_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_schemas {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schema_name   String    @unique
  app_id        String
  company_id    String
  mode          String    @default("development")
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  created_by    String?   @db.Uuid
  last_accessed DateTime? @default(now()) @db.Timestamptz(6)
  users         users?    @relation(fields: [created_by], references: [id], onUpdate: NoAction)

  @@index([app_id], map: "idx_app_schemas_app_id")
  @@index([company_id], map: "idx_app_schemas_company_id")
  @@index([created_at], map: "idx_app_schemas_created_at")
  @@index([mode], map: "idx_app_schemas_mode")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_connections {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_id    String      @db.Uuid
  connection_id String      @db.Uuid
  name          String?
  status        String?     @default("connected")
  connected_at  DateTime?   @default(now()) @db.Timestamptz(6)
  connected_by  String?     @db.Uuid
  config        Json?       @default("{}")
  last_sync_at  DateTime?   @db.Timestamptz(6)
  sync_status   String?     @default("pending")
  error_message String?
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?   @default(now()) @db.Timestamptz(6)
  companies     companies   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users?      @relation(fields: [connected_by], references: [id], onUpdate: NoAction)
  connections   connections @relation(fields: [connection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, connection_id])
  @@index([company_id], map: "idx_company_connections_company")
  @@index([connection_id], map: "idx_company_connections_connection")
  @@index([status], map: "idx_company_connections_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model connections {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  connection_key      String                @unique
  name                String
  description         String?
  icon_url            String?
  provider            String?
  auth_type           String                @default("oauth2")
  auth_config         Json?                 @default("{}")
  supported_features  Json?                 @default("[]")
  documentation_url   String?
  is_active           Boolean?              @default(true)
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  company_connections company_connections[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model integration_logs {
  id                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id             String               @db.Uuid
  company_application_id String               @db.Uuid
  execution_run_id       String?              @db.Uuid
  log_level              String
  log_source             String
  log_category           String?
  message                String
  structured_data        Json?                @default("{}")
  integration_name       String
  integration_version    String?
  container_id           String?
  logged_at              DateTime             @default(now()) @db.Timestamptz(6)
  log_sequence           Int?                 @default(0)
  execution_time_ms      Int?
  memory_usage_mb        Decimal?             @db.Decimal(10, 2)
  metadata               Json?                @default("{}")
  created_at             DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?            @default(now()) @db.Timestamptz(6)
  company_applications   company_applications @relation(fields: [company_application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  companies              companies            @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  execution_runs         execution_runs?      @relation(fields: [execution_run_id], references: [id], onUpdate: NoAction)

  @@index([company_application_id, logged_at(sort: Desc)], map: "idx_integration_logs_company_app_time")
  @@index([company_id, logged_at(sort: Desc)], map: "idx_integration_logs_company_time")
  @@index([integration_name, logged_at(sort: Desc)], map: "idx_integration_logs_integration_time")
  @@index([log_level, logged_at(sort: Desc)], map: "idx_integration_logs_level_time")
  @@index([metadata], map: "idx_integration_logs_metadata", type: Gin)
  @@index([log_source, logged_at(sort: Desc)], map: "idx_integration_logs_source_time")
  @@index([structured_data], map: "idx_integration_logs_structured_data", type: Gin)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model log_categories {
  category          String    @id
  description       String?
  integration_types String[]
  created_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plugin_data {
  id                                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_application_id              String               @db.Uuid
  key                                 String
  data                                Json?
  created_at                          DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at                          DateTime?            @default(now()) @db.Timestamptz(6)
  created_by                          String?              @db.Uuid
  updated_by                          String?              @db.Uuid
  company_applications                company_applications @relation(fields: [company_application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_plugin_data_created_byTousers users?               @relation("plugin_data_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  users_plugin_data_updated_byTousers users?               @relation("plugin_data_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)

  @@unique([company_application_id, key])
  @@index([company_application_id], map: "idx_plugin_data_company_application_id")
  @@index([key], map: "idx_plugin_data_key")
  @@index([updated_at], map: "idx_plugin_data_updated_at")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum company_invitation_role {
  owner
  superadmin
  admin
  member

  @@schema("public")
}

enum company_invitation_status {
  pending
  accepted
  rejected
  expired

  @@schema("public")
}

enum notification_type {
  company_invitation
  invitation_accepted
  invitation_rejected
  user_joined_company
  role_changed

  @@schema("public")
}

enum oauth_authorization_status {
  pending
  approved
  denied
  expired

  @@schema("auth")
}

enum oauth_client_type {
  public
  confidential

  @@schema("auth")
}

enum oauth_registration_type {
  dynamic
  manual

  @@schema("auth")
}

enum oauth_response_type {
  code

  @@schema("auth")
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum application_type {
  application
  integration

  @@schema("public")
}
