generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                                           String?                @db.Uuid
  id                                                                    String                 @id @db.Uuid
  aud                                                                   String?                @db.VarChar(255)
  role                                                                  String?                @db.VarChar(255)
  email                                                                 String?                @db.VarChar(255)
  encrypted_password                                                    String?                @db.VarChar(255)
  email_confirmed_at                                                    DateTime?              @db.Timestamptz(6)
  invited_at                                                            DateTime?              @db.Timestamptz(6)
  confirmation_token                                                    String?                @db.VarChar(255)
  confirmation_sent_at                                                  DateTime?              @db.Timestamptz(6)
  recovery_token                                                        String?                @db.VarChar(255)
  recovery_sent_at                                                      DateTime?              @db.Timestamptz(6)
  email_change_token_new                                                String?                @db.VarChar(255)
  email_change                                                          String?                @db.VarChar(255)
  email_change_sent_at                                                  DateTime?              @db.Timestamptz(6)
  last_sign_in_at                                                       DateTime?              @db.Timestamptz(6)
  raw_app_meta_data                                                     Json?
  raw_user_meta_data                                                    Json?
  is_super_admin                                                        Boolean?
  created_at                                                            DateTime?              @db.Timestamptz(6)
  updated_at                                                            DateTime?              @db.Timestamptz(6)
  phone                                                                 String?                @unique
  phone_confirmed_at                                                    DateTime?              @db.Timestamptz(6)
  phone_change                                                          String?                @default("")
  phone_change_token                                                    String?                @default("") @db.VarChar(255)
  phone_change_sent_at                                                  DateTime?              @db.Timestamptz(6)
  confirmed_at                                                          DateTime?              @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                                            String?                @default("") @db.VarChar(255)
  email_change_confirm_status                                           Int?                   @default(0) @db.SmallInt
  banned_until                                                          DateTime?              @db.Timestamptz(6)
  reauthentication_token                                                String?                @default("") @db.VarChar(255)
  reauthentication_sent_at                                              DateTime?              @db.Timestamptz(6)
  is_sso_user                                                           Boolean                @default(false)
  deleted_at                                                            DateTime?              @db.Timestamptz(6)
  is_anonymous                                                          Boolean                @default(false)
  identities                                                            identities[]
  mfa_factors                                                           mfa_factors[]
  one_time_tokens                                                       one_time_tokens[]
  sessions                                                              sessions[]
  audit_logs                                                            audit_logs[]
  companies                                                             companies[]
  company_applications                                                  company_applications[]
  company_automations                                                   company_automations[]
  company_integrations_company_integrations_connected_byTousers         company_integrations[] @relation("company_integrations_connected_byTousers")
  company_integrations_company_integrations_connected_by_user_idTousers company_integrations[] @relation("company_integrations_connected_by_user_idTousers")
  company_invitations_sent                                              company_invitations[]  @relation("Inviter")
  company_invitations_received                                          company_invitations[]
  notifications                                                         notifications[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model companies {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                 String
  billing_email        String?                @unique
  plan                 String?                @default("free")
  owner_uid            String?                @db.Uuid
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  active               Boolean?               @default(true)
  logo_url             String?
  square_logo_url      String?
  rectangular_logo_url String?
  primary_color        String?                @default("#3B82F6") @db.VarChar(7)
  secondary_color      String?                @default("#1F2937") @db.VarChar(7)
  contact_details      Json?                  @default("{}")
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  app_cron_schedules   app_cron_schedules[]
  app_runs             app_runs[]
  users                users?                 @relation(fields: [owner_uid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company_applications company_applications[]
  company_automations  company_automations[]
  company_integrations company_integrations[]
  company_invitations  company_invitations[]
  company_users        company_users[]

  @@index([contact_details], map: "idx_companies_contact_details", type: Gin)
  @@index([updated_at], map: "idx_companies_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations.   https://pris.ly/d/row-level-security for more info.
model company_users {
  id         String    @id @default(dbgenerated("uuid_generate_v4()"))
  company_id String    @db.Uuid
  user_id    String    @db.Uuid
  role       String
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "company_users_company_fk")

  @@unique([company_id, user_id], map: "company_id_user_id_unique")
  @@unique([company_id, user_id])
  @@index([company_id], map: "idx_company_users_company_id")
  @@index([company_id, user_id, role], map: "idx_company_users_lookup")
  @@index([role, company_id], map: "idx_company_users_role_company_id")
  @@index([user_id], map: "idx_company_users_user_id")
  @@schema("public")
}

model company_invitations {
  id             String                    @id @default(uuid()) @db.Uuid
  email          String
  userId         String                    @db.Uuid
  companyId      String                    @db.Uuid
  invitedBy      String                    @db.Uuid
  role           company_invitation_role   @default(member)
  message        String?
  status         company_invitation_status @default(pending)
  expiresAt      DateTime                  @db.Timestamptz(6)
  acceptedAt     DateTime?                 @db.Timestamptz(6)
  createdAt      DateTime                  @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime                  @default(now()) @db.Timestamptz(6)
  notificationId String?                   @db.Uuid
  company        companies                 @relation(fields: [companyId], references: [id])
  inviter        users                     @relation("Inviter", fields: [invitedBy], references: [id])
  notification   notifications?            @relation(fields: [notificationId], references: [id])
  user           users                     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([companyId])
  @@index([invitedBy])
  @@index([status])
  @@index([email])
  @@index([notificationId])
  @@index([companyId, status], map: "idx_company_invitations_company_id_status")
  @@index([email, status], map: "idx_company_invitations_email_status")
  @@index([expiresAt], map: "idx_company_invitations_expires_at")
  @@schema("public")
}

model notifications {
  id                  String                @id @default(uuid()) @db.Uuid
  userId              String                @db.Uuid
  type                notification_type
  title               String
  message             String
  data                Json?
  read                Boolean               @default(false)
  actionUrl           String?
  createdAt           DateTime              @default(now()) @db.Timestamptz(6)
  expiresAt           DateTime?             @db.Timestamptz(6)
  company_invitations company_invitations[]
  user                users                 @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([read])
  @@index([type])
  @@index([createdAt])
  @@index([createdAt(sort: Desc)], map: "idx_notifications_created_at")
  @@index([type], map: "idx_notifications_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model application_categories {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String         @unique
  description  String?
  icon         String?
  sort_order   Int?           @default(0)
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?      @default(now()) @db.Timestamptz(6)
  applications applications[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model applications {
  id                      String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                    String                    @unique(map: "applications_name_unique")
  description             String
  long_description        String?
  category_id             String?                   @db.Uuid
  category                String
  developer               String
  version                 String                    @default("1.0.0")
  icon_url                String?
  screenshots             String[]                  @default([])
  documentation_url       String?
  pricing_model           String?                   @default("free")
  price                   String?
  features                Json?                     @default("[]")
  tags                    String[]                  @default([])
  rating                  Decimal?                  @default(0.0) @db.Decimal(2, 1)
  download_count          Int?                      @default(0)
  is_premium              Boolean?                  @default(false)
  is_active               Boolean?                  @default(true)
  metadata                Json?                     @default("{}")
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  type                    String?                   @default("application")
  app_builds              app_builds[]
  app_cron_schedules      app_cron_schedules[]
  app_permissions         app_permissions[]
  app_runs                app_runs[]
  app_storage             app_storage[]
  application_permissions application_permissions[]
  category_ref            application_categories?   @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  company_applications    company_applications[]

  @@index([category])
  @@index([category_id])
  @@index([is_active])
  @@index([is_premium])
  @@index([rating])
  @@index([tags], type: Gin)
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_applications {
  id                String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_id        String       @db.Uuid
  application_id    String       @db.Uuid
  installed_at      DateTime?    @default(now()) @db.Timestamptz(6)
  installed_by      String?      @db.Uuid
  is_active         Boolean?     @default(true)
  configuration     Json?        @default("{}")
  settings          Json?        @default("{}")
  credentials       Json?        @default("{}")
  last_used_at      DateTime?    @db.Timestamptz(6)
  usage_count       Int?         @default(0)
  created_at        DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?    @default(now()) @db.Timestamptz(6)
  status            String?      @default("active")
  last_execution_at DateTime?    @db.Timestamptz(6)
  execution_count   Int?         @default(0)
  application       applications @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  company           companies    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?       @relation(fields: [installed_by], references: [id], onUpdate: NoAction)

  @@unique([company_id, application_id])
  @@index([company_id])
  @@index([application_id])
  @@index([is_active])
  @@index([installed_at])
  @@index([application_id], map: "idx_company_applications_app_id")
  @@index([installed_at(sort: Desc)], map: "idx_company_applications_installed_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model application_permissions {
  id              String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  application_id  String       @db.Uuid
  permission_name String
  description     String?
  is_required     Boolean?     @default(false)
  created_at      DateTime?    @default(now()) @db.Timestamptz(6)
  application     applications @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([application_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_builds {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id        String       @db.Uuid
  build_version String
  build_status  String       @default("pending")
  build_path    String?
  build_config  Json?        @default("{}")
  build_logs    String?
  created_at    DateTime?    @default(now()) @db.Timestamptz(6)
  completed_at  DateTime?    @db.Timestamptz(6)
  applications  applications @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  app_runs      app_runs[]

  @@index([app_id], map: "idx_app_builds_app_id")
  @@index([created_at(sort: Desc)], map: "idx_app_builds_created_at")
  @@index([build_status], map: "idx_app_builds_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_cron_schedules {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id          String       @db.Uuid
  company_id      String       @db.Uuid
  cron_expression String
  timezone        String?      @default("UTC")
  is_active       Boolean?     @default(true)
  last_run_at     DateTime?    @db.Timestamptz(6)
  next_run_at     DateTime?    @db.Timestamptz(6)
  last_run_id     String?      @db.Uuid
  config          Json?        @default("{}")
  created_at      DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?    @default(now()) @db.Timestamptz(6)
  applications    applications @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  companies       companies    @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  app_runs        app_runs?    @relation(fields: [last_run_id], references: [id], onUpdate: NoAction)

  @@unique([app_id, company_id], map: "unique_app_company_schedule")
  @@index([is_active], map: "idx_app_cron_schedules_active")
  @@index([app_id], map: "idx_app_cron_schedules_app_id")
  @@index([company_id], map: "idx_app_cron_schedules_company_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_outputs {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  run_id      String    @db.Uuid
  output_type String
  output_name String?
  output_data Json?
  output_path String?
  file_size   BigInt?
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  app_runs    app_runs  @relation(fields: [run_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([run_id], map: "idx_app_outputs_run_id")
  @@index([output_type], map: "idx_app_outputs_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_permissions {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id           String       @db.Uuid
  permission_type  String
  permission_value String
  description      String?
  is_required      Boolean?     @default(false)
  created_at       DateTime?    @default(now()) @db.Timestamptz(6)
  applications     applications @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([app_id, permission_type, permission_value], map: "unique_app_permission")
  @@index([app_id], map: "idx_app_permissions_app_id")
  @@index([permission_type], map: "idx_app_permissions_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_runs {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id             String               @db.Uuid
  company_id         String               @db.Uuid
  build_id           String?              @db.Uuid
  run_type           String
  status             String               @default("pending")
  executor_id        String?
  started_at         DateTime?            @default(now()) @db.Timestamptz(6)
  completed_at       DateTime?            @db.Timestamptz(6)
  duration_ms        Int?
  logs_path          String?
  output_path        String?
  error_message      String?
  metadata           Json?                @default("{}")
  app_cron_schedules app_cron_schedules[]
  app_outputs        app_outputs[]
  applications       applications         @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  app_builds         app_builds?          @relation(fields: [build_id], references: [id], onUpdate: NoAction)
  companies          companies            @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([app_id], map: "idx_app_runs_app_id")
  @@index([company_id], map: "idx_app_runs_company_id")
  @@index([run_type], map: "idx_app_runs_run_type")
  @@index([started_at(sort: Desc)], map: "idx_app_runs_started_at")
  @@index([status], map: "idx_app_runs_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_storage {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  app_id       String       @db.Uuid
  file_path    String
  file_type    String
  file_size    BigInt
  version      String       @default("1.0.0")
  checksum     String?
  metadata     Json?        @default("{}")
  created_at   DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?    @default(now()) @db.Timestamptz(6)
  applications applications @relation(fields: [app_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([app_id, file_path], map: "unique_app_file_path")
  @@index([app_id], map: "idx_app_storage_app_id")
  @@index([file_type], map: "idx_app_storage_file_type")
  @@index([version], map: "idx_app_storage_version")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  table_name String
  operation  String
  old_data   Json?
  new_data   Json?
  user_id    String?   @db.Uuid
  timestamp  DateTime? @default(now()) @db.Timestamptz(6)
  ip_address String?   @db.Inet
  user_agent String?
  metadata   Json?
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([operation], map: "idx_audit_logs_operation")
  @@index([table_name], map: "idx_audit_logs_table_name")
  @@index([timestamp], map: "idx_audit_logs_timestamp")
  @@index([user_id], map: "idx_audit_logs_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model automation_runs {
  id                    String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_automation_id String              @db.Uuid
  status                String
  started_at            DateTime?           @default(now()) @db.Timestamptz(6)
  completed_at          DateTime?           @db.Timestamptz(6)
  duration_ms           Int?
  results               Json?               @default("{}")
  error_message         String?
  logs                  Json?               @default("[]")
  triggered_by          String?             @default("schedule")
  created_at            DateTime?           @default(now()) @db.Timestamptz(6)
  company_automations   company_automations @relation(fields: [company_automation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([company_automation_id], map: "idx_automation_runs_company_automation")
  @@index([started_at], map: "idx_automation_runs_started")
  @@index([status], map: "idx_automation_runs_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model automations {
  id                    String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  script_key            String                @unique
  name                  String
  description           String?
  icon_url              String?
  category              String?               @default("monitoring")
  trigger_type          String?               @default("schedule")
  supported_frequencies Json?                 @default("[\"24h\"]")
  supported_metrics     Json?                 @default("[]")
  pricing_model         String?               @default("frequency")
  pricing_config        Json?                 @default("{}")
  default_config        Json?                 @default("{}")
  documentation_url     String?
  is_active             Boolean?              @default(true)
  created_at            DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?             @default(now()) @db.Timestamptz(6)
  company_automations   company_automations[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_automations {
  id                    String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_id            String                @db.Uuid
  automation_id         String                @db.Uuid
  integration_id        String?               @db.Uuid
  name                  String?
  is_active             Boolean?              @default(false)
  frequency             String?               @default("24h")
  metrics_watched       Json?                 @default("[]")
  period_days           Int?                  @default(7)
  price_per_month       Decimal?              @default(0) @db.Decimal(10, 2)
  notification_channels Json?                 @default("{}")
  config                Json?                 @default("{}")
  last_run_at           DateTime?             @db.Timestamptz(6)
  next_run_at           DateTime?             @db.Timestamptz(6)
  run_count             Int?                  @default(0)
  success_count         Int?                  @default(0)
  error_count           Int?                  @default(0)
  last_error_message    String?
  created_at            DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?             @default(now()) @db.Timestamptz(6)
  created_by            String?               @db.Uuid
  automation_runs       automation_runs[]
  automations           automations           @relation(fields: [automation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  companies             companies             @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                 users?                @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  company_integrations  company_integrations? @relation(fields: [integration_id], references: [id], onUpdate: NoAction)

  @@unique([company_id, automation_id])
  @@index([is_active], map: "idx_company_automations_active")
  @@index([automation_id], map: "idx_company_automations_automation")
  @@index([company_id], map: "idx_company_automations_company")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model company_integrations {
  id                                                     String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_id                                             String                @db.Uuid
  integration_id                                         String                @db.Uuid
  name                                                   String?
  status                                                 String?               @default("active")
  connected_at                                           DateTime?             @default(now()) @db.Timestamptz(6)
  connected_by                                           String?               @db.Uuid
  auth_data                                              Json?                 @default("{}")
  config                                                 Json?                 @default("{}")
  last_sync_at                                           DateTime?             @db.Timestamptz(6)
  sync_status                                            String?               @default("pending")
  error_message                                          String?
  created_at                                             DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                                             DateTime?             @default(now()) @db.Timestamptz(6)
  connected_by_user_id                                   String?               @db.Uuid
  last_sync                                              DateTime?             @db.Timestamptz(6)
  company_automations                                    company_automations[]
  companies                                              companies             @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_company_integrations_connected_byTousers         users?                @relation("company_integrations_connected_byTousers", fields: [connected_by], references: [id], onUpdate: NoAction)
  integrations                                           integrations          @relation(fields: [integration_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_company_integrations_connected_by_user_idTousers users?                @relation("company_integrations_connected_by_user_idTousers", fields: [connected_by_user_id], references: [id], onUpdate: NoAction, map: "fk_connected_by_user")

  @@unique([company_id, integration_id])
  @@index([company_id], map: "idx_company_integrations_company")
  @@index([connected_at], map: "idx_company_integrations_connected_at")
  @@index([connected_by_user_id], map: "idx_company_integrations_connected_by")
  @@index([integration_id], map: "idx_company_integrations_integration")
  @@index([integration_id], map: "idx_company_integrations_integration_id")
  @@index([last_sync], map: "idx_company_integrations_last_sync")
  @@index([status], map: "idx_company_integrations_status")
  @@index([sync_status], map: "idx_company_integrations_sync_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model integrations {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  integration_key      String                 @unique
  name                 String
  description          String?
  icon_url             String?
  provider             String?
  auth_type            String?                @default("oauth2")
  auth_config          Json?                  @default("{}")
  supported_features   Json?                  @default("[]")
  documentation_url    String?
  is_active            Boolean?               @default(true)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  company_integrations company_integrations[]

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum company_invitation_role {
  owner
  superadmin
  admin
  member

  @@schema("public")
}

enum company_invitation_status {
  pending
  accepted
  rejected
  expired

  @@schema("public")
}

enum notification_type {
  company_invitation
  invitation_accepted
  invitation_rejected
  user_joined_company
  role_changed

  @@schema("public")
}
