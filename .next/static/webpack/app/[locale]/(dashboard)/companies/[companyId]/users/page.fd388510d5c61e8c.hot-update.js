"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/(dashboard)/companies/[companyId]/users/page",{

/***/ "(app-pages-browser)/./src/lib/company/companyUserMini.ts":
/*!********************************************!*\
  !*** ./src/lib/company/companyUserMini.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchUsersByCompanyMini: () => (/* binding */ fetchUsersByCompanyMini)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/.pnpm/zod@3.24.3/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n// src/lib/company/companyUserMini.ts\n\n\n/* ─────────────── Zod schemas ─────────────── */ const userMiniSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().uuid(),\n    email: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().email(),\n    last_sign_in_at: zod__WEBPACK_IMPORTED_MODULE_1__.z.coerce.date().nullable(),\n    raw_user_meta_data: zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        full_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().nullable().optional()\n    }).nullable().optional()\n});\nconst companyUserRow = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    role: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    user: userMiniSchema\n});\n/* ─────────────── Fetch helper ─────────────── */ async function fetchUsersByCompanyMini(companyId) {\n    const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_0__.supabase.from('company_users').select(\"\\n    role,\\n    user:user_id (\\n      id,\\n      email,\\n      last_sign_in_at,\\n      raw_user_meta_data\\n    )\\n  \") //  ▲ alias = FK column (user_id)\n    .eq('company_id', companyId);\n    if (error) {\n        console.error('fetchUsersByCompanyMini:', error.message);\n        return [];\n    }\n    return data.flatMap((row)=>{\n        var _user_raw_user_meta_data;\n        const parsed = companyUserRow.safeParse(row);\n        if (!parsed.success) {\n            console.warn('Invalid user row skipped', parsed.error.flatten());\n            return [];\n        }\n        const { user, role } = parsed.data;\n        var _user_raw_user_meta_data_full_name;\n        return [\n            {\n                id: user.id,\n                email: user.email,\n                fullName: (_user_raw_user_meta_data_full_name = (_user_raw_user_meta_data = user.raw_user_meta_data) === null || _user_raw_user_meta_data === void 0 ? void 0 : _user_raw_user_meta_data.full_name) !== null && _user_raw_user_meta_data_full_name !== void 0 ? _user_raw_user_meta_data_full_name : '',\n                lastSignIn: user.last_sign_in_at,\n                role\n            }\n        ];\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvY29tcGFueS9jb21wYW55VXNlck1pbmkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEscUNBQXFDO0FBQ2I7QUFDd0I7QUFFaEQsK0NBQStDLEdBRS9DLE1BQU1FLGlCQUFpQkYsa0NBQUNBLENBQUNHLE1BQU0sQ0FBQztJQUM5QkMsSUFBS0osa0NBQUNBLENBQUNLLE1BQU0sR0FBR0MsSUFBSTtJQUNwQkMsT0FBT1Asa0NBQUNBLENBQUNLLE1BQU0sR0FBR0UsS0FBSztJQUN2QkMsaUJBQWlCUixrQ0FBQ0EsQ0FBQ1MsTUFBTSxDQUFDQyxJQUFJLEdBQUdDLFFBQVE7SUFDekNDLG9CQUFvQlosa0NBQUNBLENBQ2xCRyxNQUFNLENBQUM7UUFBRVUsV0FBV2Isa0NBQUNBLENBQUNLLE1BQU0sR0FBR00sUUFBUSxHQUFHRyxRQUFRO0lBQUcsR0FDckRILFFBQVEsR0FDUkcsUUFBUTtBQUNiO0FBRUEsTUFBTUMsaUJBQWlCZixrQ0FBQ0EsQ0FBQ0csTUFBTSxDQUFDO0lBQzlCYSxNQUFNaEIsa0NBQUNBLENBQUNLLE1BQU07SUFDZFksTUFBTWY7QUFDUjtBQVdBLGdEQUFnRCxHQUV6QyxlQUFlZ0Isd0JBQ3BCQyxTQUFpQjtJQUVuQixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTXBCLHlEQUFRQSxDQUNuQ3FCLElBQUksQ0FBQyxpQkFDTEMsTUFBTSxDQUFFLHlIQVFXLGlDQUFpQztLQUNwREMsRUFBRSxDQUFDLGNBQWNMO0lBSWxCLElBQUlFLE9BQU87UUFDVEksUUFBUUosS0FBSyxDQUFDLDRCQUE0QkEsTUFBTUssT0FBTztRQUN2RCxPQUFPLEVBQUU7SUFDWDtJQUVBLE9BQU9OLEtBQ0pPLE9BQU8sQ0FBQyxDQUFDQztZQVVNWDtRQVRkLE1BQU1ZLFNBQVNkLGVBQWVlLFNBQVMsQ0FBQ0Y7UUFDeEMsSUFBSSxDQUFDQyxPQUFPRSxPQUFPLEVBQUU7WUFDbkJOLFFBQVFPLElBQUksQ0FBQyw0QkFBNEJILE9BQU9SLEtBQUssQ0FBQ1ksT0FBTztZQUM3RCxPQUFPLEVBQUU7UUFDWDtRQUNBLE1BQU0sRUFBRWhCLElBQUksRUFBRUQsSUFBSSxFQUFFLEdBQUdhLE9BQU9ULElBQUk7WUFJcEJIO1FBSGQsT0FBTztZQUFDO2dCQUNOYixJQUFZYSxLQUFLYixFQUFFO2dCQUNuQkcsT0FBWVUsS0FBS1YsS0FBSztnQkFDdEIyQixVQUFZakIsQ0FBQUEsc0NBQUFBLDJCQUFBQSxLQUFLTCxrQkFBa0IsY0FBdkJLLCtDQUFBQSx5QkFBeUJKLFNBQVMsY0FBbENJLGdEQUFBQSxxQ0FBc0M7Z0JBQ2xEa0IsWUFBWWxCLEtBQUtULGVBQWU7Z0JBQ2hDUTtZQUNGO1NBQUU7SUFDSjtBQUNKIiwic291cmNlcyI6WyIvaG9tZS9rcnhnL0Rlc2t0b3AvbWV0cmljcy1odWItc3VwYWJhc2Uvc3JjL2xpYi9jb21wYW55L2NvbXBhbnlVc2VyTWluaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL2NvbXBhbnkvY29tcGFueVVzZXJNaW5pLnRzXG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2VDbGllbnQnO1xuXG4vKiDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAgWm9kIHNjaGVtYXMg4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAICovXG5cbmNvbnN0IHVzZXJNaW5pU2NoZW1hID0gei5vYmplY3Qoe1xuICBpZDogIHouc3RyaW5nKCkudXVpZCgpLFxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgpLFxuICBsYXN0X3NpZ25faW5fYXQ6IHouY29lcmNlLmRhdGUoKS5udWxsYWJsZSgpLFxuICByYXdfdXNlcl9tZXRhX2RhdGE6IHpcbiAgICAub2JqZWN0KHsgZnVsbF9uYW1lOiB6LnN0cmluZygpLm51bGxhYmxlKCkub3B0aW9uYWwoKSB9KVxuICAgIC5udWxsYWJsZSgpXG4gICAgLm9wdGlvbmFsKCksXG59KTtcblxuY29uc3QgY29tcGFueVVzZXJSb3cgPSB6Lm9iamVjdCh7XG4gIHJvbGU6IHouc3RyaW5nKCksXG4gIHVzZXI6IHVzZXJNaW5pU2NoZW1hLFxufSk7XG5cbi8qIFR5cGUgdXNlZCBpbiB0aGUgVUkgKi9cbmV4cG9ydCB0eXBlIENvbXBhbnlVc2VyTWluaSA9IHtcbiAgaWQ6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgZnVsbE5hbWU6IHN0cmluZztcbiAgbGFzdFNpZ25JbjogRGF0ZSB8IG51bGw7XG4gIHJvbGU6IHN0cmluZztcbn07XG5cbi8qIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCBGZXRjaCBoZWxwZXIg4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAICovXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFVzZXJzQnlDb21wYW55TWluaShcbiAgY29tcGFueUlkOiBzdHJpbmdcbik6IFByb21pc2U8Q29tcGFueVVzZXJNaW5pW10+IHtcbmNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gIC5mcm9tKCdjb21wYW55X3VzZXJzJylcbiAgLnNlbGVjdChgXG4gICAgcm9sZSxcbiAgICB1c2VyOnVzZXJfaWQgKFxuICAgICAgaWQsXG4gICAgICBlbWFpbCxcbiAgICAgIGxhc3Rfc2lnbl9pbl9hdCxcbiAgICAgIHJhd191c2VyX21ldGFfZGF0YVxuICAgIClcbiAgYCkgICAgICAgICAgICAgICAgICAvLyAg4payIGFsaWFzID0gRksgY29sdW1uICh1c2VyX2lkKVxuICAuZXEoJ2NvbXBhbnlfaWQnLCBjb21wYW55SWQpO1xuICBcblxuXG4gIGlmIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ2ZldGNoVXNlcnNCeUNvbXBhbnlNaW5pOicsIGVycm9yLm1lc3NhZ2UpO1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHJldHVybiBkYXRhXG4gICAgLmZsYXRNYXAoKHJvdykgPT4ge1xuICAgICAgY29uc3QgcGFyc2VkID0gY29tcGFueVVzZXJSb3cuc2FmZVBhcnNlKHJvdyk7XG4gICAgICBpZiAoIXBhcnNlZC5zdWNjZXNzKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignSW52YWxpZCB1c2VyIHJvdyBza2lwcGVkJywgcGFyc2VkLmVycm9yLmZsYXR0ZW4oKSk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHsgdXNlciwgcm9sZSB9ID0gcGFyc2VkLmRhdGE7XG4gICAgICByZXR1cm4gW3tcbiAgICAgICAgaWQ6ICAgICAgICAgdXNlci5pZCxcbiAgICAgICAgZW1haWw6ICAgICAgdXNlci5lbWFpbCxcbiAgICAgICAgZnVsbE5hbWU6ICAgdXNlci5yYXdfdXNlcl9tZXRhX2RhdGE/LmZ1bGxfbmFtZSA/PyAnJyxcbiAgICAgICAgbGFzdFNpZ25JbjogdXNlci5sYXN0X3NpZ25faW5fYXQsXG4gICAgICAgIHJvbGUsXG4gICAgICB9XTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJ6Iiwic3VwYWJhc2UiLCJ1c2VyTWluaVNjaGVtYSIsIm9iamVjdCIsImlkIiwic3RyaW5nIiwidXVpZCIsImVtYWlsIiwibGFzdF9zaWduX2luX2F0IiwiY29lcmNlIiwiZGF0ZSIsIm51bGxhYmxlIiwicmF3X3VzZXJfbWV0YV9kYXRhIiwiZnVsbF9uYW1lIiwib3B0aW9uYWwiLCJjb21wYW55VXNlclJvdyIsInJvbGUiLCJ1c2VyIiwiZmV0Y2hVc2Vyc0J5Q29tcGFueU1pbmkiLCJjb21wYW55SWQiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJjb25zb2xlIiwibWVzc2FnZSIsImZsYXRNYXAiLCJyb3ciLCJwYXJzZWQiLCJzYWZlUGFyc2UiLCJzdWNjZXNzIiwid2FybiIsImZsYXR0ZW4iLCJmdWxsTmFtZSIsImxhc3RTaWduSW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/company/companyUserMini.ts\n"));

/***/ })

});