{"version":3,"file":"index.esm.js","sources":["../src/services/BaseClient.ts","../src/services/GoogleAdsClient.ts","../src/services/GoogleAnalyticsClient.ts","../src/services/GoogleSheetsClient.ts","../src/services/GoogleDriveClient.ts","../src/services/GmailClient.ts","../src/services/GoogleDocsClient.ts","../src/services/GoogleSearchConsoleClient.ts","../src/MetricsHubSDK.ts","../src/config/index.ts"],"sourcesContent":["import { PluginConfig, PluginError } from \"../types\";\n\nexport class BaseClient {\n    protected config: PluginConfig;\n\n    constructor(config: PluginConfig) {\n        this.config = config;\n    }\n\n    protected async makeRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n        const url = this.getFullUrl(endpoint);\n        \n        const headers = {\n            'Content-Type': 'application/json',\n            ...(this.config.apiKey && { 'Authorization': `Bearer ${this.config.apiKey}` }),\n            ...options.headers\n        };\n\n        this.log(`Making request to ${url}`);\n\n        try {\n            const response = await fetch(url, {\n                ...options,\n                headers\n            });\n\n            if (!response.ok) {\n                throw {\n                    status: response.status,\n                    message: `HTTP ${response.status}: ${response.statusText}`\n                };\n            }\n\n            return await response.json();\n        } catch (error) {\n            throw this.handleError(error);\n        }\n    }\n\n    protected getFullUrl(endpoint: string): string {\n        return `${this.config.apiBaseUrl}${endpoint}`;\n    }\n\n    protected handleError(error: any): PluginError {\n        if (error.status) {\n            return {\n                status: error.status,\n                message: error.message,\n                details: error.details || undefined\n            };\n        }\n        return {\n            status: 500,\n            message: \"Unknown error occurred\",\n        };\n    }\n\n    protected log(message: string): void {\n        if (this.config.debug) {\n            console.log(`[${this.constructor.name}] ${message}`);\n        }\n    }\n\n    updateConfig(config: PluginConfig): void {\n        this.config = config;\n    }\n}","import {\n  GoogleAdsCampaignsResponse,\n  GoogleAdsKeywordsResponse\n} from '../types/google-ads';\nimport { BaseClient } from './BaseClient';\n\nexport class GoogleAdsClient extends BaseClient {\n    async getCampaigns(customerId: string, loginCustomerId?: string): Promise<GoogleAdsCampaignsResponse> {\n      const params = new URLSearchParams({\n        companyId: this.config.companyId,\n        customerId\n      })\n\n      // Add MCC context if provided for accessing child accounts\n      if (loginCustomerId) {\n        params.set('loginCustomerId', loginCustomerId)\n      }\n\n      const endpoint = `/api/plugins/google/ads/campaigns?${params.toString()}`\n      return this.makeRequest<GoogleAdsCampaignsResponse>(endpoint)\n    }\n\n    async getKeywords(customerId: string, options: {\n      campaignId?: string\n      adGroupId?: string\n      loginCustomerId?: string\n    } = {}): Promise<GoogleAdsKeywordsResponse> {\n      const params = new URLSearchParams({\n        companyId: this.config.companyId,\n        customerId\n      })\n\n      if (options.campaignId) {\n        params.set('campaignId', options.campaignId)\n      }\n\n      if (options.adGroupId) {\n        params.set('adGroupId', options.adGroupId)\n      }\n\n      // Add MCC context if provided for accessing child accounts\n      if (options.loginCustomerId) {\n        params.set('loginCustomerId', options.loginCustomerId)\n      }\n\n      const endpoint = `/api/plugins/google/ads/keywords?${params.toString()}`\n      return this.makeRequest<GoogleAdsKeywordsResponse>(endpoint)\n    }\n\n    /**\n     * Get campaigns for child account through MCC permissions\n     * This method implements the Funnel.io/Make.com pattern for accessing child accounts\n     * @param childCustomerId - The child account ID to get campaigns for\n     * @param mccCustomerId - The parent MCC account ID to use for permissions\n     */\n    async getCampaignsForChildAccount(childCustomerId: string, mccCustomerId: string): Promise<GoogleAdsCampaignsResponse> {\n      return this.getCampaigns(childCustomerId, mccCustomerId);\n    }\n\n    /**\n     * Get keywords for child account through MCC permissions\n     * @param childCustomerId - The child account ID to get keywords for\n     * @param mccCustomerId - The parent MCC account ID to use for permissions\n     * @param options - Additional options like campaignId, adGroupId\n     */\n    async getKeywordsForChildAccount(childCustomerId: string, mccCustomerId: string, options: {\n      campaignId?: string\n      adGroupId?: string\n    } = {}): Promise<GoogleAdsKeywordsResponse> {\n      return this.getKeywords(childCustomerId, {\n        ...options,\n        loginCustomerId: mccCustomerId\n      });\n    }\n  }\n","import { GoogleAnalyticsAccountsResponse, GoogleAnalyticsReportsResponse } from '../types/google-analytics';\nimport { BaseClient } from \"./BaseClient\";\n\nexport class GoogleAnalyticsClient extends BaseClient {\n  async getAccounts(): Promise<GoogleAnalyticsAccountsResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId\n    });\n\n    const endpoint = `/api/plugins/google/analytics/accounts?${queryParams.toString()}`;\n    return this.makeRequest<GoogleAnalyticsAccountsResponse>(endpoint);\n  }\n\n  async getReports(params: {\n    viewId: string;\n    startDate: string;\n    endDate: string;\n  }): Promise<GoogleAnalyticsReportsResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      viewId: params.viewId,\n      startDate: params.startDate,\n      endDate: params.endDate\n    });\n\n    const endpoint = `/api/plugins/google/analytics/reports?${queryParams.toString()}`;\n    return this.makeRequest<GoogleAnalyticsReportsResponse>(endpoint);\n  }\n}","import { BaseClient } from './BaseClient';\n\nexport interface GoogleSheetsReadResponse {\n  success: boolean;\n  values: any[][];\n  range: string;\n  majorDimension: string;\n}\n\nexport interface GoogleSheetsWriteResponse {\n  success: boolean;\n  updatedRows: number;\n  updatedColumns: number;\n  updatedCells: number;\n}\n\nexport class GoogleSheetsClient extends BaseClient {\n  async read(params: {\n    spreadsheetId: string;\n    range: string;\n    valueRenderOption?: 'FORMATTED_VALUE' | 'UNFORMATTED_VALUE' | 'FORMULA';\n  }): Promise<GoogleSheetsReadResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      spreadsheetId: params.spreadsheetId,\n      range: params.range,\n      ...(params.valueRenderOption && { valueRenderOption: params.valueRenderOption })\n    });\n\n    const endpoint = `/api/plugins/google/sheets/read?${queryParams.toString()}`;\n    return this.makeRequest<GoogleSheetsReadResponse>(endpoint);\n  }\n\n  async write(params: {\n    spreadsheetId: string;\n    range: string;\n    values: any[][];\n    operation: 'append' | 'update' | 'clear';\n  }): Promise<GoogleSheetsWriteResponse> {\n    const endpoint = `/api/plugins/google/sheets/write`;\n    return this.makeRequest<GoogleSheetsWriteResponse>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        companyId: this.config.companyId,\n        ...params\n      })\n    });\n  }\n}","import { BaseClient } from './BaseClient';\n\nexport interface GoogleDriveFile {\n  id: string;\n  name: string;\n  mimeType: string;\n  size?: string;\n  createdTime: string;\n  modifiedTime: string;\n  webViewLink: string;\n  webContentLink?: string;\n}\n\nexport interface GoogleDriveFilesResponse {\n  success: boolean;\n  files: GoogleDriveFile[];\n  nextPageToken?: string;\n}\n\nexport interface GoogleDriveFileResponse {\n  success: boolean;\n  file: GoogleDriveFile;\n}\n\nexport class GoogleDriveClient extends BaseClient {\n  async getFiles(params: {\n    query?: string;\n    pageSize?: number;\n    orderBy?: string;\n  } = {}): Promise<GoogleDriveFilesResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      ...(params.query && { q: params.query }),\n      ...(params.pageSize && { pageSize: params.pageSize.toString() }),\n      ...(params.orderBy && { orderBy: params.orderBy })\n    });\n\n    const endpoint = `/api/plugins/google/drive/files?${queryParams.toString()}`;\n    return this.makeRequest<GoogleDriveFilesResponse>(endpoint);\n  }\n\n  async getFile(fileId: string): Promise<GoogleDriveFileResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId\n    });\n\n    const endpoint = `/api/plugins/google/drive/files/${fileId}?${queryParams.toString()}`;\n    return this.makeRequest<GoogleDriveFileResponse>(endpoint);\n  }\n}","import { BaseClient } from './BaseClient';\n\nexport interface GmailMessage {\n  id: string;\n  threadId: string;\n  snippet: string;\n  payload: {\n    headers: Array<{\n      name: string;\n      value: string;\n    }>;\n  };\n  internalDate: string;\n  sizeEstimate: number;\n}\n\nexport interface GmailMessagesResponse {\n  success: boolean;\n  messages: GmailMessage[];\n  nextPageToken?: string;\n  resultSizeEstimate: number;\n}\n\nexport class GmailClient extends BaseClient {\n  async getMessages(params: {\n    query?: string;\n    maxResults?: number;\n    labelIds?: string[];\n  } = {}): Promise<GmailMessagesResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      ...(params.query && { q: params.query }),\n      ...(params.maxResults && { maxResults: params.maxResults.toString() }),\n      ...(params.labelIds && { labelIds: params.labelIds.join(',') })\n    });\n\n    const endpoint = `/api/plugins/google/gmail/messages?${queryParams.toString()}`;\n    return this.makeRequest<GmailMessagesResponse>(endpoint);\n  }\n}","import { BaseClient } from './BaseClient';\n\nexport interface GoogleDocument {\n  documentId: string;\n  title: string;\n  body: {\n    content: any[];\n  };\n  revisionId: string;\n}\n\nexport interface GoogleDocsResponse {\n  success: boolean;\n  document: GoogleDocument;\n}\n\nexport interface GoogleDocsCreateResponse {\n  success: boolean;\n  document: {\n    documentId: string;\n    title: string;\n    revisionId: string;\n  };\n}\n\nexport class GoogleDocsClient extends BaseClient {\n  async getDocument(documentId: string): Promise<GoogleDocsResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      documentId\n    });\n\n    const endpoint = `/api/plugins/google/docs?${queryParams.toString()}`;\n    return this.makeRequest<GoogleDocsResponse>(endpoint);\n  }\n\n  async createDocument(params: {\n    title: string;\n    content?: string;\n  }): Promise<GoogleDocsCreateResponse> {\n    const endpoint = `/api/plugins/google/docs`;\n    return this.makeRequest<GoogleDocsCreateResponse>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        companyId: this.config.companyId,\n        operation: 'create',\n        ...params\n      })\n    });\n  }\n\n  async updateDocument(params: {\n    documentId: string;\n    content: string;\n  }): Promise<GoogleDocsResponse> {\n    const endpoint = `/api/plugins/google/docs`;\n    return this.makeRequest<GoogleDocsResponse>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        companyId: this.config.companyId,\n        operation: 'update',\n        ...params\n      })\n    });\n  }\n}","import { BaseClient } from './BaseClient';\n\nexport interface SearchConsoleSite {\n  siteUrl: string;\n  permissionLevel: 'siteFullUser' | 'siteOwner' | 'siteRestrictedUser' | 'siteUnverifiedUser';\n}\n\nexport interface SearchConsolePerformanceData {\n  keys: string[];\n  clicks: number;\n  impressions: number;\n  ctr: number;\n  position: number;\n}\n\nexport interface SearchConsoleSitesResponse {\n  success: boolean;\n  sites: SearchConsoleSite[];\n  performanceData?: SearchConsolePerformanceData[];\n}\n\nexport class GoogleSearchConsoleClient extends BaseClient {\n  async getSites(params: {\n    siteUrl?: string;\n    startDate?: string;\n    endDate?: string;\n    dimensions?: string[];\n  } = {}): Promise<SearchConsoleSitesResponse> {\n    const queryParams = new URLSearchParams({\n      companyId: this.config.companyId,\n      ...(params.siteUrl && { siteUrl: params.siteUrl }),\n      ...(params.startDate && { startDate: params.startDate }),\n      ...(params.endDate && { endDate: params.endDate }),\n      ...(params.dimensions && { dimensions: params.dimensions.join(',') })\n    });\n\n    const endpoint = `/api/plugins/google/search-console/sites?${queryParams.toString()}`;\n    return this.makeRequest<SearchConsoleSitesResponse>(endpoint);\n  }\n}","import { GoogleAdsClient } from \"./services/GoogleAdsClient\";\nimport { GoogleAnalyticsClient } from \"./services/GoogleAnalyticsClient\";\nimport { GoogleSheetsClient } from \"./services/GoogleSheetsClient\";\nimport { GoogleDriveClient } from \"./services/GoogleDriveClient\";\nimport { GmailClient } from \"./services/GmailClient\";\nimport { GoogleDocsClient } from \"./services/GoogleDocsClient\";\nimport { GoogleSearchConsoleClient } from \"./services/GoogleSearchConsoleClient\";\nimport { PluginConfig } from \"./types\";\n\nexport class MetricsHubSDK {\n    public ads: GoogleAdsClient;\n    public analytics: GoogleAnalyticsClient; // Placeholder for future AnalyticsClient\n    public sheets: GoogleSheetsClient;\n    public drive: GoogleDriveClient; // Placeholder for future DriveClient\n    public gmail: GmailClient; // Placeholder for future GmailClient\n    public searchConsole: GoogleSearchConsoleClient; // Placeholder for future SearchConsoleClient\n    public docs: GoogleDocsClient; // Placeholder for future DocsClient\n\n\n  constructor(private config: PluginConfig) {\n    this.config.apiBaseUrl = config.apiBaseUrl || 'https://api.metrics-hub.com';\n    this.ads = new GoogleAdsClient(this.config);\n    this.analytics = new GoogleAnalyticsClient(this.config);\n    this.sheets = new GoogleSheetsClient(this.config);\n    this.drive = new GoogleDriveClient(this.config);\n    this.gmail = new GmailClient(this.config);\n    this.searchConsole = new GoogleSearchConsoleClient(this.config);\n    this.docs = new GoogleDocsClient(this.config);\n  }\n\n  public updateConfig(newConfig: Partial<{ apiKey: string; companyId: string; apiBaseUrl?: string }>) {\n    this.config = { ...this.config, ...newConfig };\n    this.ads.updateConfig(this.config);\n    this.analytics.updateConfig(this.config);\n    this.sheets.updateConfig(this.config);\n    this.drive.updateConfig(this.config);\n    this.gmail.updateConfig(this.config);\n    this.searchConsole.updateConfig(this.config);\n    this.docs.updateConfig(this.config);\n  }\n  public getConfig() {\n    return this.config;\n  }\n  \n}","/**\n * Plugin SDK Configuration\n */\n\nimport { PluginConfig } from '../types'\n\nlet globalConfig: PluginConfig | null = null\n\n/**\n * Configure the plugin SDK with your company settings\n * \n * @param config - Plugin configuration\n * \n * @example\n * ```tsx\n * import { configurePlugin } from '@metrics-hub/plugin-sdk'\n * \n * configurePlugin({\n *   companyId: 'your-company-id',\n *   apiBaseUrl: 'https://your-metrics-hub.vercel.app'\n * })\n * ```\n */\nexport function configurePlugin(config: PluginConfig): void {\n  globalConfig = {\n    apiBaseUrl: 'http://localhost:3000', // Default to local development\n    debug: false,\n    ...config\n  }\n  \n  if (config.debug) {\n    console.log('[MetricsHub SDK] Configured with:', { ...config, apiKey: '***' })\n  }\n}\n\n/**\n * Get the current plugin configuration\n */\nexport function getPluginConfig(): PluginConfig {\n  if (!globalConfig) {\n    throw new Error(\n      'Plugin SDK not configured. Call configurePlugin() first.\\n\\n' +\n      'Example:\\n' +\n      'import { configurePlugin } from \"@metrics-hub/plugin-sdk\"\\n' +\n      'configurePlugin({ companyId: \"your-company-id\" })'\n    )\n  }\n  return globalConfig\n}\n\n/**\n * Check if the plugin SDK is configured\n */\nexport function isPluginConfigured(): boolean {\n  return globalConfig !== null\n}\n\n/**\n * Reset the plugin configuration (mainly for testing)\n */\nexport function resetPluginConfig(): void {\n  globalConfig = null\n}"],"names":[],"mappings":"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"}